
PASS addTransceiver - Calling removeTrack when connection is closed should throw InvalidStateError 
PASS addTrack - Calling removeTrack when connection is closed should throw InvalidStateError 
PASS addTransceiver - Calling removeTrack on different connection that is closed should throw InvalidStateError 
PASS addTrack - Calling removeTrack on different connection that is closed should throw InvalidStateError 
FAIL addTransceiver - Calling removeTrack on different connection should throw InvalidAccessError assert_throws: function "() => pc2.removeTrack(sender)" did not throw
FAIL addTrack - Calling removeTrack on different connection should throw InvalidAccessError assert_throws: function "() => pc2.removeTrack(sender)" did not throw
FAIL addTransceiver - Calling removeTrack with valid sender should set sender.track to null assert_equals: expected (object) null but got (undefined) undefined
FAIL addTrack - Calling removeTrack with valid sender should set sender.track to null assert_equals: expected null but got object "[object MediaStreamTrack]"
FAIL Calling removeTrack with currentDirection sendrecv should set direction to recvonly assert_equals: expected (object) null but got (undefined) undefined
FAIL Calling removeTrack with currentDirection sendonly should set direction to inactive assert_equals: expected (object) null but got (undefined) undefined
FAIL Calling removeTrack with currentDirection recvonly should not change direction assert_equals: expected (object) null but got (undefined) undefined
FAIL Calling removeTrack with currentDirection inactive should not change direction assert_equals: expected (object) null but got (undefined) undefined

